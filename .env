HOST=127.0.0.1
PORT=8080
LOG_LEVEL=sqlx_todo=info,actix=info,mio=error,untitled=trace,sqlx=trace
LOG_DIR="logs"
LOG_NAME="app"



#SQLX 辅助查询宏必须依赖这个 用于编译时查表结构来解析SQL跟返回
#如果不使用辅助宏 不必定义此环境变量
DATABASE_URL="mysql://root:@127.0.0.1/test"
#离线模式
# true 可以通过 cargo sqlx prepare 把数据库先生成 sqlx-data.json 文件,编译时不用连接数据库
# false 编译时连接数据库进行生成对应的结构等,可以不需要 sqlx-data.json 文件
SQLX_OFFLINE=false
#SQL解析规则:
# 当使用辅助宏时候:
#       不使用自定义结构(query!),编译时会解析表来生成结构
#       使用自定义结构(query_as!),编译时会解析表来验证跟结构是否匹配,可通过以下修正校验错误
#		重定义类型:
# 			可以为NULL或SQL:id as "id?" 对应为Option
# 			字段一定不为NULL:id as "id!" 实际数据为NULL时,Result为Err
# 			根据数据库字段映射或指定类型:id as "id:i32"
# 可以通过 try_get* 函数获取查询结果,也可以通过 query_as!货query_as转为结构
# 自定义字段类型,只能是单个类型元组结构,可用非辅助宏结构
# #[derive(sqlx::Type)]
# #[sqlx(transparent)]
# pub struct MyInt4(i32);

REDIS_URL="127.0.0.1:6379"
